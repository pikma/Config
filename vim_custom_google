" vim: ft=vim
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                       ____                   _                               "
"                      / ___| ___   ___   __ _| | ___                          "
"                     | |  _ / _ \ / _ \ / _` | |/ _ \                         "
"                     | |_| | (_) | (_) | (_| | |  __/                         "
"                      \____|\___/ \___/ \__, |_|\___|                         "
"                                        |___/                                 "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

if !exists("s:includes_are_sourced")
  let s:includes_are_sourced = 1

  " Google Style
  source /usr/share/vim/google/google.vim

  " GTags
  source /usr/share/vim/google/gtags.vim

  " Google3-custom find function (go to file, etc.)
  " source /usr/share/vim/google/runtime/findinc.vim

  " Blaze integration
  " The original script is at: /home/williasr/.vim.d/blaze.vim. Mine is modified
  " to work in subfolders of the google3 directory.
  " source ~/.vim/blaze.vim
  " source /usr/share/vim/google/runtime/blaze.vim

  " Grok support, provides the following commands:
  "   - :Grok.        The "Grok" command looks up the identifier under the
  "                   cursor in grok, opens a new tab window, and loads the grok
  "                   results in the window's location list.
  "   - :GrokV.       Same as :Grok but verbose
  "   - :GrokDef.     Same as :Grok, but using a default set of edge kinds that
  "                   should point to the definitions or declarations of the
  "                   identifier.  - :GrokRef. Same as :Grok, but using a
  "                   default set of edge kinds that should point to the
  "                   references or usages of the identifier.
  "   - :GrokCallers. Same as :Grok, but using the CALLGRAPH_FROM edge.
  "   - :GrokCallees. Same as :Grok, but using the CALLGRAPH_TO edge.
  " source /usr/share/vim/google/runtime/grok.vim

  " Most used windows, provides the following shortcuts:
  " Enter : Jump to the file
  " T / t : Toggle between window views
  "             (all - directories - source files - test files)
  " d :     Delete a line from your cache
  " K :     Clear your entire cache
  " C :     Show the cache-counts
  " G :     track the directory with g4 / git5 (doesn't apply to citc)
  " source /usr/share/vim/google/runtime/mru.vim
endif

" Two bindings for GTags: the first one jumps to the word under the cursor, the
" second one also highlights it.
" nmap ,) :exe 'Gtlist ' . expand('<cword>')<CR>
nmap g) :exe 'let searchtag= "' . expand('<cword>') . '"' \| :exe 'Gtlist ' . searchtag <CR> \| :exe 'let @/= "' . searchtag . '"'<CR>

" Custom shortcut: 'Gs' instead of 'Gtlist'
command! -nargs=1 -complete=custom,Gtag_complete Gs
      \ call GtagList("FindExactTag", "<args>")

" Change the path so that gf opens #includes.
let current_dir = fnamemodify('', ':p')
let google3 = strpart(current_dir, 0, strridx(current_dir, "/google3/") ) . "/google3"
let &path = &path . "," . google3
let &path = &path . "," . google3 . "/../READONLY/google3"
" this one comes after cause it takes longer to load
let &path = &path . "," . google3 . "/blaze-genfiles"

" Load Blaze errors into quickfix mode
nmap <leader>m :call LoadBlazeErrors()<Cr>:cc<Cr>
" Run the most appropriate blaze command on the target for the current file.
nmap <leader>b :call BlazeDwim()<Cr>
" Run update_deps on the target for the current file.
" nmap <leader>d :call UpdateDepsDwim()<Cr>

" Mondrian
command! Comments cexpr system('git5 comments --quickfix')
" G5Lint
command! Lint cexpr system('git5 lint --quickfix')

" Open the current file in CodeSearch
nmap gcs :!google-chrome --new-window https://cs.corp.google.com\\#%:p:s?.*./google3/?google3/?<CR> <CR>
" Search for the word under the cursor in CodeSearch
nmap gc) :!google-chrome --new-window https://cs.corp.google.com/'<cword>'<CR><CR>

" Automatically run Buildifier on BUILD files
let g:auto_buildifier = 1

" let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'
" nnoremap ,mr :GoogleMruWindow<CR>

"Teach VIM about spitfire templates
autocmd BufNewFile,BufRead *.spt set filetype=cheetah

" Glug autogen
Glug blaze
Glug codefmt do/commands
" Glug critique
Glug easygoogle
Glug findinc
Glug g4
" Glug git5
" Glug golang
" Glug googlepaths
" Glug googler
" Glug googlestyle
" Glug grok
" Glug python
" Glug whitespace
" Glug youcompleteme-google
"
" set expandtab
" set shiftwidth=2
set tabstop=2

